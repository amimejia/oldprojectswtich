/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.guilford;

import java.awt.Color;
import java.util.ArrayList;

/**
 *
 * @author amyme
 */
public class ApplicantsPanel extends javax.swing.JPanel {

//Attribute
    private ArrayList<PositionApplicant> applicants;
    private int appIndex = 0; //Implements specification 3

    /**
     * Creates new form ApplicantsPanel
     */
    public ApplicantsPanel() {
        initComponents();

    }
    private final Color LABEL_COLOR = new Color(238, 238, 238);

    public ApplicantsPanel(ArrayList<PositionApplicant> applicants) {
        initComponents();
        this.applicants = applicants;
        introScore.setText("Intro Comp Prog: " + "" + applicants.get(0).getIntroCompProg()); //Implements specification 4
        advScore.setText("Adv Comp Prog: " + "" + applicants.get(0).getAdvCompProg());
        networkScore.setText("Network Sys: " + "" + applicants.get(0).getNetworkingSys());
        databScore.setText("Database Sys: " + "" + applicants.get(0).getDatabaseSys());
        algoScore.setText("Algorithms: " + "" + applicants.get(0).getAlgorithms());
        operaScore.setText("Operating Sys: " + "" + applicants.get(0).getOperatingSys());
        analyzeAppLabel.setText("Method 1 Analysis: " + "" + applicants.get(0).analyze_applicant1());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        analyzeButtonGroup = new javax.swing.ButtonGroup();
        introScore = new javax.swing.JLabel();
        appNumber = new javax.swing.JTextField();
        forwardApp = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        advScore = new javax.swing.JLabel();
        networkScore = new javax.swing.JLabel();
        databScore = new javax.swing.JLabel();
        algoScore = new javax.swing.JLabel();
        operaScore = new javax.swing.JLabel();
        analyzeAppLabel = new javax.swing.JLabel();
        displayColor = new javax.swing.JCheckBox();
        analyze1Choice = new javax.swing.JRadioButton();
        analyze2Choice = new javax.swing.JRadioButton();
        analyze3Choice = new javax.swing.JRadioButton();
        analyze4Choice = new javax.swing.JRadioButton();
        applicantSlider = new javax.swing.JSlider();
        applicantChooseLabel = new javax.swing.JLabel();

        introScore.setText("jLabel1");
        introScore.setOpaque(true);

        appNumber.setText("Insert Index");
        appNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appNumberActionPerformed(evt);
            }
        });

        forwardApp.setText("->");
        forwardApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardAppActionPerformed(evt);
            }
        });

        jButton1.setText("<-");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        advScore.setText("jLabel1");
        advScore.setOpaque(true);

        networkScore.setText("jLabel2");
        networkScore.setOpaque(true);

        databScore.setText("jLabel1");
        databScore.setOpaque(true);

        algoScore.setText("jLabel1");
        algoScore.setOpaque(true);

        operaScore.setText("jLabel1");
        operaScore.setOpaque(true);

        analyzeAppLabel.setText("jLabel1");

        displayColor.setText("Colors Background");
        displayColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayColorActionPerformed(evt);
            }
        });

        analyzeButtonGroup.add(analyze1Choice);
        analyze1Choice.setSelected(true);
        analyze1Choice.setText("Analysis 1");
        analyze1Choice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyze1ChoiceActionPerformed(evt);
            }
        });

        analyzeButtonGroup.add(analyze2Choice);
        analyze2Choice.setText("Analysis 2");
        analyze2Choice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyze2ChoiceActionPerformed(evt);
            }
        });

        analyzeButtonGroup.add(analyze3Choice);
        analyze3Choice.setText("Analysis 3");
        analyze3Choice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyze3ChoiceActionPerformed(evt);
            }
        });

        analyzeButtonGroup.add(analyze4Choice);
        analyze4Choice.setText("Analysis 4");
        analyze4Choice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyze4ChoiceActionPerformed(evt);
            }
        });

        applicantSlider.setMajorTickSpacing(10000);
        applicantSlider.setMaximum(18356);
        applicantSlider.setMinorTickSpacing(5000);
        applicantSlider.setPaintLabels(true);
        applicantSlider.setPaintTicks(true);
        applicantSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                applicantSliderStateChanged(evt);
            }
        });

        applicantChooseLabel.setText("Applicant Chooser:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(displayColor)
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(introScore)
                                .addGap(18, 18, 18)
                                .addComponent(networkScore)
                                .addGap(18, 18, 18)
                                .addComponent(algoScore))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(advScore)
                                .addGap(18, 18, 18)
                                .addComponent(databScore)
                                .addGap(18, 18, 18)
                                .addComponent(operaScore))
                            .addComponent(analyzeAppLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(applicantChooseLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(applicantSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(forwardApp))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(appNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(analyze1Choice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(analyze2Choice))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(analyze3Choice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(analyze4Choice)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(appNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(applicantSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(forwardApp)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(applicantChooseLabel)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(introScore)
                            .addComponent(networkScore)
                            .addComponent(algoScore))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(advScore)
                            .addComponent(databScore)
                            .addComponent(operaScore)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(displayColor)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(analyzeAppLabel)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(analyze1Choice)
                    .addComponent(analyze2Choice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(analyze3Choice)
                    .addComponent(analyze4Choice))
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void appNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appNumberActionPerformed
        // TODO add your handling code here:
        appIndex = Integer.parseInt(appNumber.getText()); //Implements specification 5
        updateIndex();


    }//GEN-LAST:event_appNumberActionPerformed

    private void forwardAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardAppActionPerformed
        // TODO add your handling code here:
        //Add 1 to the current value of appIndex and update it
        appIndex = appIndex + 1; //Implements specification 5
        updateIndex();

        //This is what the button does by itself ^^^
    }//GEN-LAST:event_forwardAppActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        appIndex = appIndex - 1;
        updateIndex();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void displayColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayColorActionPerformed
        // TODO add your handling code here:
        changeLabelColor();
    }//GEN-LAST:event_displayColorActionPerformed

    private void analyze1ChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyze1ChoiceActionPerformed
        // TODO add your handling code here:
        analyzeAppLabelSet();
    }//GEN-LAST:event_analyze1ChoiceActionPerformed

    private void analyze2ChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyze2ChoiceActionPerformed
        // TODO add your handling code here:
        analyzeAppLabelSet();
    }//GEN-LAST:event_analyze2ChoiceActionPerformed

    private void analyze3ChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyze3ChoiceActionPerformed
        // TODO add your handling code here:
        analyzeAppLabelSet();
    }//GEN-LAST:event_analyze3ChoiceActionPerformed

    private void analyze4ChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyze4ChoiceActionPerformed
        // TODO add your handling code here:
        analyzeAppLabelSet();
    }//GEN-LAST:event_analyze4ChoiceActionPerformed

    private void applicantSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_applicantSliderStateChanged
        // TODO add your handling code here:
        appIndex = applicantSlider.getValue();
        updateIndex();
    }//GEN-LAST:event_applicantSliderStateChanged

    private void changeLabelColor() {
        if (displayColor.isSelected()) {
            int redIntro = (int) (applicants.get(appIndex).getIntroCompProg() * 1.8 + 40); //This formula is better because you can distinguish color more
            int greenAdv = (int) (applicants.get(appIndex).getAdvCompProg() * 1.8 + 40);
            int redNet = (int) (applicants.get(appIndex).getNetworkingSys()*1.8 + 40);
            int greendata = (int) (applicants.get(appIndex).getDatabaseSys()*1.8 + 40);
            int redAlgo = (int) (applicants.get(appIndex).getAlgorithms() *1.8 + 40);
            int greenOpera = (int) (applicants.get(appIndex).getOperatingSys() * 1.8 + 40);
            introScore.setBackground(new Color(redIntro, 0, 0));
            advScore.setBackground(new Color(0, greenAdv, 0));
            networkScore.setBackground(new Color(redNet, 0, 0));
            databScore.setBackground(new Color(0, greendata, 0));
            algoScore.setBackground(new Color(redAlgo, 0, 0));
            operaScore.setBackground(new Color(0, greenOpera, 0));
        } else {
            introScore.setBackground(LABEL_COLOR);
            advScore.setBackground(LABEL_COLOR);
            networkScore.setBackground(LABEL_COLOR);
            databScore.setBackground(LABEL_COLOR);
            algoScore.setBackground(LABEL_COLOR);
            operaScore.setBackground(LABEL_COLOR);
        }
    }

    private void updateIndex() {
        if (appIndex < 0) {
            appIndex = 0; //Implements specification 6
        } else if (appIndex >= applicants.size()) {
            appIndex = applicants.size() - 1;
        }
        appNumber.setText("" + appIndex);
        introScore.setText("Intro To Comp Prog:" + "" + applicants.get(appIndex).getIntroCompProg());
        advScore.setText("Adv Comp Prog: " + "" + applicants.get(appIndex).getIntroCompProg());
        networkScore.setText("Network Sys: " + "" + applicants.get(appIndex).getNetworkingSys());
        databScore.setText("Database Sys: " + "" + applicants.get(appIndex).getDatabaseSys());
        algoScore.setText("Algorithms: " + "" + applicants.get(appIndex).getAlgorithms());
        operaScore.setText("Operating Sys: " + "" + applicants.get(appIndex).getOperatingSys());
        analyzeAppLabelSet();
        changeLabelColor();
        applicantSlider.setValue(appIndex);
    }

    private void analyzeAppLabelSet() {
        if (analyze1Choice.isSelected()) {
            analyzeAppLabel.setText("Analysis 1: " + applicants.get(appIndex).analyze_applicant1());
        }
        if (analyze2Choice.isSelected()) {
            analyzeAppLabel.setText("Anaylsis 2: " + applicants.get(appIndex).analyze_applicant2());
        }
        if (analyze3Choice.isSelected()) {
            analyzeAppLabel.setText("Analysis 3: " + applicants.get(appIndex).analyze_applicant3());
        }
        if (analyze4Choice.isSelected()) {
            analyzeAppLabel.setText("Analysis 4: " + applicants.get(appIndex).analyze_applicant4());
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel advScore;
    private javax.swing.JLabel algoScore;
    private javax.swing.JRadioButton analyze1Choice;
    private javax.swing.JRadioButton analyze2Choice;
    private javax.swing.JRadioButton analyze3Choice;
    private javax.swing.JRadioButton analyze4Choice;
    private javax.swing.JLabel analyzeAppLabel;
    private javax.swing.ButtonGroup analyzeButtonGroup;
    private javax.swing.JTextField appNumber;
    private javax.swing.JLabel applicantChooseLabel;
    private javax.swing.JSlider applicantSlider;
    private javax.swing.JLabel databScore;
    private javax.swing.JCheckBox displayColor;
    private javax.swing.JButton forwardApp;
    private javax.swing.JLabel introScore;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel networkScore;
    private javax.swing.JLabel operaScore;
    // End of variables declaration//GEN-END:variables
}
